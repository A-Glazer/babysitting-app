{"ast":null,"code":"export default function babysitterReducer(state = {\n  babysitters: [],\n  loading: true\n}, action) {\n  switch (action.type) {\n    case 'LOADING_BABYSITTERS':\n      return { ...state,\n        babysitters: [...state.babysitters],\n        loading: true\n      };\n\n    case 'FETCH_BABYSITTERS':\n      // console.log(\"action.payload\", action.payload)\n      return {\n        babysitters: action.payload,\n        loading: false\n      };\n\n    case 'ADD_BABYSITTER':\n      return { ...state,\n        babysitters: [...state.babysitters, action.payload],\n        loading: false\n      };\n    // case 'DELETE_BABYSITTER':\n    //     const otherBabysitters = state.babysitters.filter(baby => baby !== action.payload)\n    //     return {...state, otherBabysitters}\n    // case 'ADD_COMMENT':\n    //     return {\n    //         ...state, babysitters: state.babysitters.map(baby => {\n    //             if (baby.id === action.payload.id) {\n    //                 return action.payload\n    //             } else { return baby }\n    //         })\n    //     }\n    // case 'DELETE_COMMENT':\n    //     return {\n    //         ...state, babysitters: state.babysitters.map(baby => {\n    //             if (baby.id === action.payload.id) {\n    //                 return action.payload\n    //             } else { return baby }\n    //         })\n    //     }\n\n    case 'ADD_SLOT':\n      let updatedBabysitters = [...state.babysitters];\n      let newSitter = updatedBabysitters.find(baby => baby.id === action.payload.id);\n      let index = updatedBabysitters.findIndex(baby => baby === newSitter);\n      updatedBabysitters[index] = action.payload;\n      return { ...state,\n        babysitters: updatedBabysitters,\n        loading: false\n      };\n\n    case \"DELETE_SLOT\":\n      debugger;\n      let originalUrl = action.payload.url;\n      let middleUrl = originalUrl.slice(0, originalUrl.lastIndexOf(\"/\"));\n      let babyId = middleUrl.substring(0, middleUrl.lastIndexOf(\"/\") + 1); // const slots = \"test\" \n\n      return { ...state\n      };\n    // const s = \"your_string\";\n    // const withoutLastChunk = s.slice(0, s.lastIndexOf(\"_\"));\n    // console.log(withoutLastChunk);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/reducers/babysitterReducer.js"],"names":["babysitterReducer","state","babysitters","loading","action","type","payload","updatedBabysitters","newSitter","find","baby","id","index","findIndex","originalUrl","url","middleUrl","slice","lastIndexOf","babyId","substring"],"mappings":"AACA,eAAe,SAASA,iBAAT,CAA2BC,KAAK,GAAG;AAAEC,EAAAA,WAAW,EAAE,EAAf;AAAmBC,EAAAA,OAAO,EAAE;AAA5B,CAAnC,EAAuEC,MAAvE,EAA+E;AAE1F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,qBAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHC,QAAAA,WAAW,EAAE,CAAC,GAAGD,KAAK,CAACC,WAAV,CAFV;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAK,mBAAL;AACI;AACA,aAAO;AAAED,QAAAA,WAAW,EAAEE,MAAM,CAACE,OAAtB;AAA+BH,QAAAA,OAAO,EAAE;AAAxC,OAAP;;AAGJ,SAAK,gBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHC,QAAAA,WAAW,EAAE,CAAC,GAAGD,KAAK,CAACC,WAAV,EAAuBE,MAAM,CAACE,OAA9B,CAFV;AAGHH,QAAAA,OAAO,EAAE;AAHN,OAAP;AAMJ;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAK,UAAL;AACI,UAAII,kBAAkB,GAAG,CAAC,GAAGN,KAAK,CAACC,WAAV,CAAzB;AACA,UAAIM,SAAS,GAAGD,kBAAkB,CAACE,IAAnB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeK,EAA3D,CAAhB;AACA,UAAIC,KAAK,GAAGL,kBAAkB,CAACM,SAAnB,CAA6BH,IAAI,IAAKA,IAAI,KAAKF,SAA/C,CAAZ;AACAD,MAAAA,kBAAkB,CAACK,KAAD,CAAlB,GAA6BR,MAAM,CAACE,OAApC;AACA,aAAO,EACH,GAAGL,KADA;AAEHC,QAAAA,WAAW,EAAEK,kBAFV;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAK,aAAL;AACI;AACD,UAAIW,WAAW,GAAGV,MAAM,CAACE,OAAP,CAAeS,GAAjC;AACA,UAAIC,SAAS,GAAGF,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAqBH,WAAW,CAACI,WAAZ,CAAwB,GAAxB,CAArB,CAAhB;AACA,UAAIC,MAAM,GAAGH,SAAS,CAACI,SAAV,CAAoB,CAApB,EAAuBJ,SAAS,CAACE,WAAV,CAAsB,GAAtB,IAA2B,CAAlD,CAAb,CAJH,CAMG;;AACC,aAAO,EAAE,GAAGjB;AAAL,OAAP;AAEJ;AACA;AACA;;AAEA;AACI,aAAOA,KAAP;AApER;AAwEH","sourcesContent":["\r\nexport default function babysitterReducer(state = { babysitters: [], loading: true }, action) {\r\n\r\n    switch (action.type) {\r\n        case 'LOADING_BABYSITTERS':\r\n            return {\r\n                ...state,\r\n                babysitters: [...state.babysitters],\r\n                loading: true\r\n            }\r\n\r\n        case 'FETCH_BABYSITTERS':\r\n            // console.log(\"action.payload\", action.payload)\r\n            return { babysitters: action.payload, loading: false }\r\n\r\n\r\n        case 'ADD_BABYSITTER':\r\n            return {\r\n                ...state,\r\n                babysitters: [...state.babysitters, action.payload],\r\n                loading: false\r\n            }\r\n\r\n        // case 'DELETE_BABYSITTER':\r\n        //     const otherBabysitters = state.babysitters.filter(baby => baby !== action.payload)\r\n        //     return {...state, otherBabysitters}\r\n\r\n\r\n        // case 'ADD_COMMENT':\r\n        //     return {\r\n        //         ...state, babysitters: state.babysitters.map(baby => {\r\n        //             if (baby.id === action.payload.id) {\r\n        //                 return action.payload\r\n        //             } else { return baby }\r\n        //         })\r\n        //     }\r\n\r\n        // case 'DELETE_COMMENT':\r\n        //     return {\r\n        //         ...state, babysitters: state.babysitters.map(baby => {\r\n        //             if (baby.id === action.payload.id) {\r\n        //                 return action.payload\r\n        //             } else { return baby }\r\n        //         })\r\n        //     }\r\n\r\n        case 'ADD_SLOT':\r\n            let updatedBabysitters = [...state.babysitters]\r\n            let newSitter = updatedBabysitters.find(baby => baby.id === action.payload.id)\r\n            let index = updatedBabysitters.findIndex(baby => (baby === newSitter))\r\n            updatedBabysitters[index] = (action.payload)\r\n            return {\r\n                ...state,\r\n                babysitters: updatedBabysitters,\r\n                loading: false\r\n            }\r\n\r\n        case \"DELETE_SLOT\":\r\n            debugger\r\n           let originalUrl = action.payload.url\r\n           let middleUrl = originalUrl.slice(0, originalUrl.lastIndexOf(\"/\"))\r\n           let babyId = middleUrl.substring(0, middleUrl.lastIndexOf(\"/\")+1)\r\n\r\n           // const slots = \"test\" \r\n            return { ...state}\r\n         \r\n        // const s = \"your_string\";\r\n        // const withoutLastChunk = s.slice(0, s.lastIndexOf(\"_\"));\r\n        // console.log(withoutLastChunk);\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}