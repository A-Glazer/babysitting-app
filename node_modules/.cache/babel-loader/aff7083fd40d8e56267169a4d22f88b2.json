{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/components/Slots.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row'; // import Button from 'react-bootstrap/Button'\n// import { Link } from 'react-router-dom'\n// import { render } from '@testing-library/react'\n// import Col from 'react-bootstrap/Col'\n\nconst Slots = ({\n  babysitter\n}) => {\n  // {debugger}\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, babysitter.slots.map(slot => {\n    return card(slot);\n  }));\n\n  function dayToString(day_of_week) {\n    console.log(\"dayToString\", day_of_week);\n\n    if (day_of_week === 0) {\n      return \"Sunday\";\n    } else if (day_of_week === 1) {\n      return \"Monday\";\n    } else if (day_of_week === 2) {\n      return \"Tuesday\";\n    } else if (day_of_week === 3) {\n      return \"Wednesday\";\n    } else if (day_of_week === 4) {\n      return \"Thursday\";\n    } else if (day_of_week == 5) {\n      return \"Friday\";\n    } else if (day_of_week === 6) {\n      return \"Saturday\";\n    }\n  }\n\n  function timeToString(time_of_day) {\n    // debugger\n    console.log(\"timeToString\", time_of_day);\n\n    if (time_of_day === 0) {\n      return \"Morning\";\n    } else if (time_of_day === 1) {\n      return \"Afternoon\";\n    } else if (time_of_day === 2) {\n      return \"Evening\";\n    }\n  }\n\n  function card(slot) {\n    console.log(\"card slot\", slot);\n    return React.createElement(Row, {\n      className: \"babyCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardDeck, {\n      className: \"card-padding date-cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Card, {\n      bg: \"light\",\n      style: {\n        width: '14rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, dayToString(slot.day_of_week)), React.createElement(ListGroup, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, theSlot(slot.time_of_day))), React.createElement(\"button\", {\n      variant: \"link\",\n      className: \"reset-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Reset \", dayToString(slot.day_of_week))))); // }\n  }\n\n  function theSlot(time_of_day) {\n    console.log(\"theSlot\", time_of_day);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, time_of_day.map(time => {\n      if (time === 0) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Morning\");\n      } else if (time === 1) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Afternoon\");\n      } else if (time === 2) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Evening\");\n      }\n    }));\n  }\n};\n\nexport default Slots;","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/components/Slots.js"],"names":["React","Card","CardDeck","ListGroup","Row","Slots","babysitter","slots","map","slot","card","dayToString","day_of_week","console","log","timeToString","time_of_day","width","theSlot","time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CACA;AACA;AACA;AACA;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAE9B;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKA,UAAU,CAACC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAAE,WAAOC,IAAI,CAACD,IAAD,CAAX;AAAmB,GAAlD,CAJL,CADJ;;AAUA,WAASE,WAAT,CAAqBC,WAArB,EAAkC;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,WAA3B;;AACA,QAAIA,WAAW,KAAK,CAApB,EAAuB;AACnB,aAAO,QAAP;AACH,KAFD,MAEO,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,QAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,SAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,WAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,UAAP;AACH,KAFM,MAEA,IAAIA,WAAW,IAAI,CAAnB,EAAsB;AACzB,aAAO,QAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,UAAP;AACH;AACJ;;AAED,WAASG,YAAT,CAAsBC,WAAtB,EAAmC;AAC/B;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,WAA5B;;AACA,QAAIA,WAAW,KAAK,CAApB,EAAuB;AACnB,aAAO,SAAP;AACH,KAFD,MAEO,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,WAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,SAAP;AACH;AACJ;;AAED,WAASN,IAAT,CAAcD,IAAd,EAAoB;AAChBI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,IAAzB;AACA,WACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,yBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAiB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcN,WAAW,CAACF,IAAI,CAACG,WAAN,CAAzB,CADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,OAAO,CAACT,IAAI,CAACO,WAAN,CADZ,CADJ,CAFJ,EAQQ;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,SAAS,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAuDL,WAAW,CAACF,IAAI,CAACG,WAAN,CAAlE,CARR,CADJ,CADJ,CADJ,CAFgB,CAmBhB;AACH;;AAED,WAASM,OAAT,CAAiBF,WAAjB,EAA8B;AAC1BH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,WAAvB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,WAAW,CAACR,GAAZ,CAAgBW,IAAI,IAAI;AACjC,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACZ,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH,OAFD,MAEO,IAAIA,IAAI,KAAK,CAAb,EAAgB;AACnB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,OAFM,MAEA,IAAIA,IAAI,KAAK,CAAb,EAAgB;AACnB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;AACJ,KARY,CAAN,CAAP;AAWH;AACJ,CAjFD;;AAmFA,eAAed,KAAf","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Row from 'react-bootstrap/Row'\r\n// import Button from 'react-bootstrap/Button'\r\n// import { Link } from 'react-router-dom'\r\n// import { render } from '@testing-library/react'\r\n// import Col from 'react-bootstrap/Col'\r\n\r\n\r\nconst Slots = ({ babysitter }) => {\r\n\r\n    // {debugger}\r\n    return (\r\n        <div>\r\n            {/* {let allSlot = babysitter.slots}\r\n            {let slotSet = [...new Set(allSlot)]\r\n            return slotSet */}\r\n            {babysitter.slots.map(slot => { return card(slot) })}\r\n            {/* {babysitter && babysitter.slots.map(slot => { return card(slot) })} */}\r\n        </div>\r\n    )\r\n\r\n    function dayToString(day_of_week) {\r\n        console.log(\"dayToString\", day_of_week)\r\n        if (day_of_week === 0) {\r\n            return \"Sunday\"\r\n        } else if (day_of_week === 1) {\r\n            return \"Monday\"\r\n        } else if (day_of_week === 2) {\r\n            return \"Tuesday\"\r\n        } else if (day_of_week === 3) {\r\n            return \"Wednesday\"\r\n        } else if (day_of_week === 4) {\r\n            return \"Thursday\"\r\n        } else if (day_of_week == 5) {\r\n            return \"Friday\"\r\n        } else if (day_of_week === 6) {\r\n            return \"Saturday\"\r\n        }\r\n    }\r\n\r\n    function timeToString(time_of_day) {\r\n        // debugger\r\n        \r\n        console.log(\"timeToString\", time_of_day)\r\n        if (time_of_day === 0) {\r\n            return \"Morning\"\r\n        } else if (time_of_day === 1) {\r\n            return \"Afternoon\"\r\n        } else if (time_of_day === 2) {\r\n            return \"Evening\"\r\n        }\r\n    }\r\n\r\n    function card(slot) {\r\n        console.log(\"card slot\", slot)\r\n        return (\r\n            <Row className=\"babyCard\">\r\n                <CardDeck className=\"card-padding date-cards\">\r\n                    <Card bg=\"light\" style={{ width: '14rem' }}>\r\n                        <Card.Header>{dayToString(slot.day_of_week)}</Card.Header>\r\n                        <ListGroup variant=\"info\">\r\n                            <ListGroup.Item>\r\n                                {theSlot(slot.time_of_day)}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        {/* <Card.Footer className=\"text-muted reset-button\"> */}\r\n                            <button variant=\"link\" className=\"reset-button\">Reset {dayToString(slot.day_of_week)}</button>\r\n                            {/* </Card.Footer> */}\r\n                    </Card>\r\n                </CardDeck>\r\n            </Row >\r\n        )\r\n        // }\r\n    }\r\n\r\n    function theSlot(time_of_day) {\r\n        console.log(\"theSlot\", time_of_day)\r\n        return <div>{time_of_day.map(time => {\r\n            if (time === 0) {\r\n                return <li>Morning</li>\r\n            } else if (time === 1) {\r\n                return <li>Afternoon</li>\r\n            } else if (time === 2) {\r\n                return <li>Evening</li>\r\n            }\r\n        })\r\n        }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Slots\r\n"]},"metadata":{},"sourceType":"module"}