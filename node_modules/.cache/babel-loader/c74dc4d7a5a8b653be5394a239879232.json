{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/components/Slots.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport { Link } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\n\nconst Slots = props => {\n  console.log(\"this is props\", props);\n\n  function dayToString(day_of_week) {\n    if (day_of_week === 0) {\n      return \"Sunday\";\n    } else if (day_of_week === 1) {\n      return \"Monday\";\n    } else if (day_of_week === 2) {\n      return \"Tuesday\";\n    } else if (day_of_week === 3) {\n      return \"Wednesday\";\n    } else if (day_of_week === 4) {\n      return \"Thursday\";\n    } else if (day_of_week == 5) {\n      return \"Friday\";\n    } else if (day_of_week === 6) {\n      return \"Saturday\";\n    }\n  }\n\n  function timeToString(time_of_day) {\n    if (time_of_day === 0) {\n      return \"Morning\";\n    } else if (time_of_day === 1) {\n      return \"Afternoon\";\n    } else if (time_of_day === 2) {\n      return \"Evening\";\n    }\n  } //  return (\n  // <div>\n\n\n  {\n    /* <Row className=\"slot-card-padding\"> */\n  }\n  {\n    /* idea #1 */\n  }\n  {\n    /* Sunday */\n  }\n  {\n    /* {props.slots && props.slots.map(slot => \r\n      {if (slot.day_of_week === 0) {\r\n      return(\r\n          <Card style={{ width: '18rem' }}>\r\n          <Card.Header>Sunday</Card.Header>\r\n          <ListGroup variant=\"info\">\r\n          <ListGroup.Item>\r\n          {(timeToString(slot.time_of_day))}\r\n              </ListGroup.Item>\r\n          \r\n      </ListGroup>\r\n      </Card>\r\n      )\r\n    }}\r\n    )}  */\n  }\n  {\n    /* Monday */\n  }\n  {\n    /* {props.slots && props.slots.map(slot =>\r\n      {if (slot.day_of_week === 1) {\r\n      return(\r\n          <Card style={{ width: '18rem' }}>\r\n          <Card.Header>Monday</Card.Header>\r\n          <ListGroup variant=\"info\">\r\n          <ListGroup.Item>\r\n          {(timeToString(slot.time_of_day))}\r\n              </ListGroup.Item>\r\n          \r\n      </ListGroup>\r\n      </Card>\r\n      )\r\n    }}\r\n    )}  */\n  }\n  {\n    /* Tuesday */\n  }\n  {\n    /* {props.slots && props.slots.map(slot =>\r\n       {if (slot.day_of_week === 2) {\r\n       return(\r\n           <Card style={{ width: '18rem' }}>\r\n           <Card.Header>Tueday</Card.Header>\r\n           <ListGroup variant=\"info\">\r\n           <ListGroup.Item>\r\n           {(timeToString(slot.time_of_day))}\r\n               </ListGroup.Item>\r\n           \r\n       </ListGroup>\r\n       </Card>\r\n       )\r\n    }}\r\n    )} */\n  }\n  {\n    /* Wednesday */\n  }\n  {\n    /* {props.slots && props.slots.map(slot =>\r\n           {if (slot.day_of_week === 3) {\r\n           return(\r\n               <Card style={{ width: '18rem' }}>\r\n               <Card.Header>Wednesday</Card.Header>\r\n               <ListGroup variant=\"info\">\r\n               <ListGroup.Item>\r\n               {(timeToString(slot.time_of_day))}\r\n                   </ListGroup.Item>\r\n               \r\n           </ListGroup>\r\n           </Card>\r\n           )\r\n        }}\r\n        )} */\n  }\n  {\n    /* Thursday */\n  }\n  {\n    /* {props.slots && props.slots.map(slot =>\r\n           {if (slot.day_of_week === 4) {\r\n           return(\r\n               <Card style={{ width: '18rem' }}>\r\n               <Card.Header>Thursday</Card.Header>\r\n               <ListGroup variant=\"info\">\r\n               <ListGroup.Item>\r\n               {(timeToString(slot.time_of_day))}\r\n                   </ListGroup.Item>\r\n               \r\n           </ListGroup>\r\n           </Card>\r\n           )\r\n        }}\r\n        )} */\n  }\n  {\n    /* Friday */\n  }\n  {\n    /* {props.slots && props.slots.map(slot =>\r\n           {if (slot.day_of_week === 5) {\r\n           return(\r\n               <Card style={{ width: '18rem' }}>\r\n               <Card.Header>Friday</Card.Header>\r\n               <ListGroup variant=\"info\">\r\n               <ListGroup.Item>\r\n               {(timeToString(slot.time_of_day))}\r\n                   </ListGroup.Item>\r\n           </ListGroup>\r\n           </Card>\r\n           )\r\n        }}\r\n        )} */\n  }\n  {\n    /* Saturday */\n  }\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, props.slots && props.slots.map(slot => console.log(\"this is slot\", slot) //     {if (slot.day_of_week === 6) {\n  //     return(\n  //         <Card style={{ width: '18rem' }}>\n  //         <Card.Header>Saturday</Card.Header>\n  //         <ListGroup variant=\"info\">\n  //         <ListGroup.Item>\n  //         {(timeToString(slot.time_of_day))}\n  //             </ListGroup.Item>\n  //     </ListGroup>\n  //     </Card>\n  //     )\n  //  }}\n  ));\n  {\n    /* end of idea #1 */\n  }\n  {\n    /* ) */\n  }\n  {\n    /* </Row> */\n  }\n  {}\n  /* idea #2 */\n  // const slotsArr = props.slots.filter(slot => (slot.day_of_week === 0){\n  //    timeToString(slot.time_of_day)\n  // }\n  // </div>\n\n  {\n    /* end of idea #2 */\n  }\n};\n\nexport default Slots; // const captionsPG = Object.values(state.all.filter(c => c.rating === \"PG\"))","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/components/Slots.js"],"names":["React","Card","Button","CardDeck","Link","ListGroup","Row","Slots","props","console","log","dayToString","day_of_week","timeToString","time_of_day","slots","map","slot"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;;AAEA,WAASG,WAAT,CAAqBC,WAArB,EAAiC;AAC7B,QAAIA,WAAW,KAAK,CAApB,EAAsB;AAClB,aAAO,QAAP;AACH,KAFD,MAEM,IAAIA,WAAW,KAAK,CAApB,EAAsB;AACxB,aAAO,QAAP;AACH,KAFK,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAsB;AACxB,aAAO,SAAP;AACH,KAFK,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAsB;AACxB,aAAO,WAAP;AACH,KAFK,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAsB;AACxB,aAAO,UAAP;AACH,KAFK,MAEA,IAAIA,WAAW,IAAI,CAAnB,EAAqB;AACvB,aAAO,QAAP;AACH,KAFK,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAsB;AACxB,aAAO,UAAP;AACH;AACJ;;AAED,WAASC,YAAT,CAAsBC,WAAtB,EAAkC;AAC9B,QAAIA,WAAW,KAAK,CAApB,EAAsB;AAClB,aAAO,SAAP;AACH,KAFD,MAEM,IAAIA,WAAW,KAAK,CAApB,EAAsB;AACxB,aAAO,WAAP;AACH,KAFK,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAsB;AACxB,aAAO,SAAP;AACH;AAEJ,GA9BoB,CAgCrB;AACI;;;AACI;AAAC;AAA0C;AAC3C;AAAC;AAAc;AAEf;AAAC;AAAa;AACb;AAAC;;;;;;;;;;;;;;;AAcM;AACR;AAAC;AAAa;AACb;AAAC;;;;;;;;;;;;;;;AAcM;AACZ;AAAC;AAAc;AACX;AAAC;;;;;;;;;;;;;;;AAcK;AAEV;AAAC;AAAgB;AACjB;AAAC;;;;;;;;;;;;;;;AAcU;AACX;AAAC;AAAe;AAChB;AAAC;;;;;;;;;;;;;;;AAcU;AACX;AAAC;AAAa;AACd;AAAC;;;;;;;;;;;;;;AAaU;AACX;AAAC;AAAe;AAChB,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,KAAK,CAACO,KAAN,IAAeP,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACpCR,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BO,IAA5B,CADgB,CAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAda,GADjB,CAFA;AAqBK;AAAC;AAAqB;AAC/B;AAAC;AAAQ;AACT;AAAC;AAAa;AAGd,GAAe;AAAd;AACD;AACA;AAEA;AAGA;;AACA;AAAC;AAAqB;AAIzB,CA5KD;;AA8KA,eAAeV,KAAf,C,CAEA","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport {Link} from 'react-router-dom'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\n\r\nconst Slots = (props) => {\r\n    console.log(\"this is props\", props)\r\n\r\n    function dayToString(day_of_week){\r\n        if (day_of_week === 0){\r\n            return \"Sunday\"\r\n        }else if (day_of_week === 1){\r\n            return \"Monday\"\r\n        }else if (day_of_week === 2){\r\n            return \"Tuesday\"\r\n        }else if (day_of_week === 3){\r\n            return \"Wednesday\"\r\n        }else if (day_of_week === 4){\r\n            return \"Thursday\"\r\n        }else if (day_of_week == 5){\r\n            return \"Friday\"\r\n        }else if (day_of_week === 6){\r\n            return \"Saturday\"\r\n        }\r\n    }\r\n\r\n    function timeToString(time_of_day){\r\n        if (time_of_day === 0){\r\n            return \"Morning\"\r\n        }else if (time_of_day === 1){\r\n            return \"Afternoon\"\r\n        }else if (time_of_day === 2){\r\n            return \"Evening\"\r\n        }\r\n\r\n    }\r\n\r\n    //  return (\r\n        // <div>\r\n            {/* <Row className=\"slot-card-padding\"> */}\r\n            {/* idea #1 */}\r\n           \r\n            {/* Sunday */}\r\n             {/* {props.slots && props.slots.map(slot => \r\n                {if (slot.day_of_week === 0) {\r\n                return(\r\n                    <Card style={{ width: '18rem' }}>\r\n                    <Card.Header>Sunday</Card.Header>\r\n                    <ListGroup variant=\"info\">\r\n                    <ListGroup.Item>\r\n                    {(timeToString(slot.time_of_day))}\r\n                        </ListGroup.Item>\r\n                    \r\n                </ListGroup>\r\n                </Card>\r\n                )\r\n             }}\r\n             )}  */}\r\n            {/* Monday */}\r\n             {/* {props.slots && props.slots.map(slot =>\r\n                {if (slot.day_of_week === 1) {\r\n                return(\r\n                    <Card style={{ width: '18rem' }}>\r\n                    <Card.Header>Monday</Card.Header>\r\n                    <ListGroup variant=\"info\">\r\n                    <ListGroup.Item>\r\n                    {(timeToString(slot.time_of_day))}\r\n                        </ListGroup.Item>\r\n                    \r\n                </ListGroup>\r\n                </Card>\r\n                )\r\n             }}\r\n             )}  */}\r\n        {/* Tuesday */}\r\n            {/* {props.slots && props.slots.map(slot =>\r\n                {if (slot.day_of_week === 2) {\r\n                return(\r\n                    <Card style={{ width: '18rem' }}>\r\n                    <Card.Header>Tueday</Card.Header>\r\n                    <ListGroup variant=\"info\">\r\n                    <ListGroup.Item>\r\n                    {(timeToString(slot.time_of_day))}\r\n                        </ListGroup.Item>\r\n                    \r\n                </ListGroup>\r\n                </Card>\r\n                )\r\n            }}\r\n            )} */}\r\n\r\n        {/* Wednesday */}\r\n        {/* {props.slots && props.slots.map(slot =>\r\n                {if (slot.day_of_week === 3) {\r\n                return(\r\n                    <Card style={{ width: '18rem' }}>\r\n                    <Card.Header>Wednesday</Card.Header>\r\n                    <ListGroup variant=\"info\">\r\n                    <ListGroup.Item>\r\n                    {(timeToString(slot.time_of_day))}\r\n                        </ListGroup.Item>\r\n                    \r\n                </ListGroup>\r\n                </Card>\r\n                )\r\n             }}\r\n             )} */}\r\n        {/* Thursday */}\r\n        {/* {props.slots && props.slots.map(slot =>\r\n                {if (slot.day_of_week === 4) {\r\n                return(\r\n                    <Card style={{ width: '18rem' }}>\r\n                    <Card.Header>Thursday</Card.Header>\r\n                    <ListGroup variant=\"info\">\r\n                    <ListGroup.Item>\r\n                    {(timeToString(slot.time_of_day))}\r\n                        </ListGroup.Item>\r\n                    \r\n                </ListGroup>\r\n                </Card>\r\n                )\r\n             }}\r\n             )} */}\r\n        {/* Friday */}\r\n        {/* {props.slots && props.slots.map(slot =>\r\n                {if (slot.day_of_week === 5) {\r\n                return(\r\n                    <Card style={{ width: '18rem' }}>\r\n                    <Card.Header>Friday</Card.Header>\r\n                    <ListGroup variant=\"info\">\r\n                    <ListGroup.Item>\r\n                    {(timeToString(slot.time_of_day))}\r\n                        </ListGroup.Item>\r\n                </ListGroup>\r\n                </Card>\r\n                )\r\n             }}\r\n             )} */}\r\n        {/* Saturday */}\r\n        return(\r\n\r\n        <div>\r\n         {props.slots && props.slots.map(slot =>\r\n         console.log(\"this is slot\", slot),\r\n            //     {if (slot.day_of_week === 6) {\r\n            //     return(\r\n            //         <Card style={{ width: '18rem' }}>\r\n            //         <Card.Header>Saturday</Card.Header>\r\n            //         <ListGroup variant=\"info\">\r\n            //         <ListGroup.Item>\r\n            //         {(timeToString(slot.time_of_day))}\r\n            //             </ListGroup.Item>\r\n                    \r\n            //     </ListGroup>\r\n            //     </Card>\r\n            //     )\r\n            //  }}\r\n             )}\r\n             </div>\r\n        )\r\n             {/* end of idea #1 */}\r\n    {/* ) */}\r\n    {/* </Row> */}\r\n   \r\n   \r\n    {/* idea #2 */}\r\n    // const slotsArr = props.slots.filter(slot => (slot.day_of_week === 0){\r\n    //    timeToString(slot.time_of_day)\r\n\r\n    // }\r\n    \r\n                \r\n    // </div>\r\n    {/* end of idea #2 */}\r\n\r\n\r\n\r\n}\r\n\r\nexport default Slots\r\n\r\n// const captionsPG = Object.values(state.all.filter(c => c.rating === \"PG\"))\r\n"]},"metadata":{},"sourceType":"module"}