{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/SlotsContainer.js\";\nimport React from 'react';\nimport SlotInput from '../components/SlotInput';\nimport Slots from '../components/Slots';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { connect } from 'react-redux';\n\nclass SlotsContainer extends React.Component {\n  render() {\n    if (this.props.loading) {\n      console.log(\"loading is true\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Loading...\")));\n    } else {\n      // debugger\n      console.log(\"loading is false\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(SlotInput, {\n        babysitter: this.props.babysitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(Slots, {\n        babysitter: this.props.babysitter,\n        deleteSlot: this.props.babysitter.id,\n        babysitterId: this.props.babysitter.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state.loading\n  };\n}; // need to move to actions\n// const mapDispatchToProps = dispatch => ({\n//     deleteSlot: slot => dispatch({type: \"DELETE_SLOT\", slot})\n// })\n\n\nexport default connect(mapStateToProps)(SlotsContainer);","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/SlotsContainer.js"],"names":["React","SlotInput","Slots","Spinner","connect","SlotsContainer","Component","render","props","loading","console","log","babysitter","id","mapStateToProps","state","babysitters"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAEzCC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CADJ;AAMH,KARD,MAQO;AACH;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AACI,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI,UAD3B;AAEI,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI,UAAX,CAAsBC,EAFtC;AAGI,QAAA,YAAY,EAAE,KAAKL,KAAL,CAAWI,UAAX,CAAsBC,EAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAUH;AACJ;;AAzBwC;;AA4B7C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHP,IAAAA,OAAO,EAAEM,KAAK,CAACN;AAFZ,GAAP;AAIH,CALD,C,CAOA;AACA;AACA;AACA;;;AAEA,eAAeL,OAAO,CAACU,eAAD,CAAP,CAAyBT,cAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport SlotInput from '../components/SlotInput'\r\nimport Slots from '../components/Slots'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SlotsContainer extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            console.log(\"loading is true\")\r\n            return (\r\n                <div>\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>)\r\n        } else {\r\n            // debugger\r\n            console.log(\"loading is false\")\r\n            return (\r\n                <div>\r\n                    <SlotInput babysitter={this.props.babysitter} />\r\n                    <Slots\r\n                        babysitter={this.props.babysitter}\r\n                        deleteSlot={this.props.babysitter.id}\r\n                        babysitterId={this.props.babysitter.id}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        babysitters: state.babysitters,\r\n        loading: state.loading\r\n    }\r\n}\r\n\r\n// need to move to actions\r\n// const mapDispatchToProps = dispatch => ({\r\n//     deleteSlot: slot => dispatch({type: \"DELETE_SLOT\", slot})\r\n// })\r\n\r\nexport default connect(mapStateToProps)(SlotsContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}