{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/SlotsContainer.js\";\nimport React from 'react';\nimport SlotInput from '../components/SlotInput';\nimport Slots from '../components/Slots';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { fetchBabysitters } from '../actions/fetchBabysitters';\nimport { connect } from 'react-redux';\nimport { render } from 'react-dom';\n\nclass SlotsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoading = () => {\n      console.log(\"loading\", state.loading);\n\n      if (this.state.loading === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Loading...\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(SlotInput, {\n          babysitter: this.props.babysitters,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(Slots, {\n          babysitter: this.props.babysitter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n      }\n    };\n  } // componentWillMount() {\n  //     this.props.fetchBabysitters()\n  // }\n\n\n  render() {\n    if (this.props.loading) {\n      return this.handleLoading();\n    } else {\n      console.log(\"this is slots\", this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(SlotInput, {\n        babysitter: this.props.babysitters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Slots, {\n        babysitter: this.props.babysitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state\n  };\n};\n\nexport default connect(mapStateToProps)(SlotsContainer);","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/SlotsContainer.js"],"names":["React","SlotInput","Slots","Spinner","fetchBabysitters","connect","render","SlotsContainer","Component","constructor","props","handleLoading","console","log","state","loading","babysitters","babysitter","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,aATmB,GASH,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAK,CAACC,OAA7B;;AACA,UAAI,KAAKD,KAAL,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC7B,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,CADJ;AAMH,OAPD,MAQK;AACD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAW,UAAA,UAAU,EAAE,KAAKL,KAAL,CAAWM,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,KAAD;AAAO,UAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAMH;AACJ,KA3BkB;AAElB,GAJwC,CAMzC;AACA;AACA;;;AAuBAX,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKI,KAAL,CAAWK,OAAf,EAAwB;AACpB,aAAO,KAAKJ,aAAL,EAAP;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKH,KAAlC;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKA,KAAL,CAAWM,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;AACJ;;AA3CwC;;AA8C7C,MAAMC,eAAe,GAAGJ,KAAK,IAAI;AAC7B,SAAO;AACHE,IAAAA,WAAW,EAAEF,KAAK,CAACE,WADhB;AAEHD,IAAAA,OAAO,EAAED;AAFN,GAAP;AAKH,CAND;;AASA,eAAeT,OAAO,CAACa,eAAD,CAAP,CAA0BX,cAA1B,CAAf","sourcesContent":["import React from 'react'\r\nimport SlotInput from '../components/SlotInput'\r\nimport Slots from '../components/Slots'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { fetchBabysitters } from '../actions/fetchBabysitters'\r\nimport { connect } from 'react-redux'\r\nimport { render } from 'react-dom'\r\n\r\nclass SlotsContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     this.props.fetchBabysitters()\r\n    // }\r\n\r\n\r\n    handleLoading = () => {\r\n        console.log(\"loading\", state.loading)\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div>\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>)\r\n        } \r\n        else {\r\n            return (\r\n                <div>\r\n                    <SlotInput babysitter={this.props.babysitters} />\r\n                    <Slots babysitter={this.props.babysitter} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return this.handleLoading()\r\n        } else {\r\n            console.log(\"this is slots\", this.props)\r\n            return (\r\n                <div>\r\n                    <SlotInput babysitter={this.props.babysitters} />\r\n                    <Slots babysitter={this.props.babysitter} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        babysitters: state.babysitters,\r\n        loading: state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps) (SlotsContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}