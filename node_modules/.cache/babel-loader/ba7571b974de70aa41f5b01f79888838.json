{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/BabysittersContainer.js\";\nimport React from 'react';\nimport BabysitterInput from '../components/BabysitterInput';\nimport Babysitters from '../components/Babysitters';\nimport { fetchBabysitters } from '../actions/fetchBabysitters';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport BabysitterShow from '../components/BabysitterShow';\nimport SlotInput from '../components/SlotInput';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass BabysittersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Loading...\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/babysitters/new\",\n          component: BabysitterInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/babysitters/:id\",\n          render: routerProps => React.createElement(BabysitterShow, Object.assign({}, routerProps, {\n            babysitters: this.props.babysitter,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/babysitters\",\n          render: routerProps => React.createElement(Babysitters, Object.assign({}, routerProps, {\n            babysitters: this.props.babysitters,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.handleLoading(), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/babysitters/new\",\n      component: BabysitterInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/babysitters/:id\",\n      render: routerProps => React.createElement(BabysitterShow, Object.assign({}, routerProps, {\n        babysitters: this.props.babysitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/babysitters\",\n      render: routerProps => React.createElement(Babysitters, Object.assign({}, routerProps, {\n        babysitters: this.props.babysitters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state.loading\n  };\n};\n\nexport default connect(mapStateToProps)(BabysittersContainer);","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/BabysittersContainer.js"],"names":["React","BabysitterInput","Babysitters","fetchBabysitters","connect","Route","Switch","BabysitterShow","SlotInput","Spinner","BabysittersContainer","Component","constructor","props","handleLoading","loading","routerProps","babysitter","babysitters","render","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport BabysitterInput from '../components/BabysitterInput'\r\nimport Babysitters from '../components/Babysitters'\r\nimport { fetchBabysitters } from '../actions/fetchBabysitters'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport BabysitterShow from '../components/BabysitterShow'\r\nimport SlotInput from '../components/SlotInput'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\n\r\nclass BabysittersContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    handleLoading = () => {\r\n        if (this.props.loading) {\r\n            return (\r\n                <div>\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>)\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Switch>\r\n                        <Route path='/babysitters/new' component={BabysitterInput} />\r\n                        <Route path='/babysitters/:id' render={(routerProps) =>\r\n                            <BabysitterShow {...routerProps} babysitters={this.props.babysitter} />} />\r\n                        <Route path='/babysitters' render={(routerProps) =>\r\n                            <Babysitters {...routerProps} babysitters={this.props.babysitters} />} />\r\n                    </Switch>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.handleLoading()}\r\n                <Switch>\r\n                    <Route path='/babysitters/new' component={BabysitterInput} />\r\n\r\n                    <Route path='/babysitters/:id' render={(routerProps) =>\r\n                        <BabysitterShow {...routerProps} babysitters={this.props.babysitter} />} />\r\n                    <Route path='/babysitters' render={(routerProps) =>\r\n                        <Babysitters {...routerProps} babysitters={this.props.babysitters} />} />\r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        babysitters: state.babysitters,\r\n        loading: state.loading\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(BabysittersContainer)"]},"metadata":{},"sourceType":"module"}