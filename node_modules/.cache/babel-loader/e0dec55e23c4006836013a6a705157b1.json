{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/TestFetch.js\";\n\nconst Slots = ({\n  babysitter\n}) => {\n  console.log(\"this is props\", babysitter);\n\n  function dayToString(day_of_week) {\n    if (day_of_week === 0) {\n      return \"Sunday\";\n    } else if (day_of_week === 1) {\n      return \"Monday\";\n    } else if (day_of_week === 2) {\n      return \"Tuesday\";\n    } else if (day_of_week === 3) {\n      return \"Wednesday\";\n    } else if (day_of_week === 4) {\n      return \"Thursday\";\n    } else if (day_of_week == 5) {\n      return \"Friday\";\n    } else if (day_of_week === 6) {\n      return \"Saturday\";\n    }\n  }\n\n  function timeToString(time_of_day) {\n    if (time_of_day === 0) {\n      return \"Morning\";\n    } else if (time_of_day === 1) {\n      return \"Afternoon\";\n    } else if (time_of_day === 2) {\n      return \"Evening\";\n    }\n  } // function slotFilter(slot) {\n  //     slot.filter(slot => slot.day_of_week === 0)\n  //  }\n\n\n  function card(slot) {\n    return React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, dayToString(slot.day_of_week)), React.createElement(ListGroup, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, timeToString(slot.time_of_day))));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, babysitter.slots.map(slot => {\n    return card(slot);\n  }));\n};\n\nexport default Slots;","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/TestFetch.js"],"names":["Slots","babysitter","console","log","dayToString","day_of_week","timeToString","time_of_day","card","slot","width","slots","map"],"mappings":";;AAAA,MAAMA,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,UAA7B;;AAEA,WAASG,WAAT,CAAqBC,WAArB,EAAkC;AAC9B,QAAIA,WAAW,KAAK,CAApB,EAAuB;AACnB,aAAO,QAAP;AACH,KAFD,MAEO,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,QAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,SAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,WAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,UAAP;AACH,KAFM,MAEA,IAAIA,WAAW,IAAI,CAAnB,EAAsB;AACzB,aAAO,QAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,UAAP;AACH;AACJ;;AAED,WAASC,YAAT,CAAsBC,WAAtB,EAAmC;AAC/B,QAAIA,WAAW,KAAK,CAApB,EAAuB;AACnB,aAAO,SAAP;AACH,KAFD,MAEO,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,WAAP;AACH,KAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC1B,aAAO,SAAP;AACH;AAEJ,GA/B6B,CAiC9B;AACA;AACA;;;AAEA,WAASC,IAAT,CAAcC,IAAd,EAAoB;AAChB,WAAQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcN,WAAW,CAACK,IAAI,CAACJ,WAAN,CAAzB,CADI,EAEJ,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMC,YAAY,CAACG,IAAI,CAACF,WAAN,CADlB,CADJ,CAFI,CAAR;AASH;;AAGD,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,UAAU,CAACU,KAAX,CAAiBC,GAAjB,CAAqBH,IAAI,IAAI;AAAE,WAAQD,IAAI,CAACC,IAAD,CAAZ;AAAqB,GAApD,CADL,CAFJ;AAQH,CA1DD;;AA2DA,eAAeT,KAAf","sourcesContent":["const Slots = ({ babysitter }) => {\r\n\r\n    console.log(\"this is props\", babysitter)\r\n\r\n    function dayToString(day_of_week) {\r\n        if (day_of_week === 0) {\r\n            return \"Sunday\"\r\n        } else if (day_of_week === 1) {\r\n            return \"Monday\"\r\n        } else if (day_of_week === 2) {\r\n            return \"Tuesday\"\r\n        } else if (day_of_week === 3) {\r\n            return \"Wednesday\"\r\n        } else if (day_of_week === 4) {\r\n            return \"Thursday\"\r\n        } else if (day_of_week == 5) {\r\n            return \"Friday\"\r\n        } else if (day_of_week === 6) {\r\n            return \"Saturday\"\r\n        }\r\n    }\r\n\r\n    function timeToString(time_of_day) {\r\n        if (time_of_day === 0) {\r\n            return \"Morning\"\r\n        } else if (time_of_day === 1) {\r\n            return \"Afternoon\"\r\n        } else if (time_of_day === 2) {\r\n            return \"Evening\"\r\n        }\r\n\r\n    }\r\n\r\n    // function slotFilter(slot) {\r\n    //     slot.filter(slot => slot.day_of_week === 0)\r\n    //  }\r\n\r\n    function card(slot) {\r\n        return (<Card style={{ width: '18rem' }}>\r\n            <Card.Header>{dayToString(slot.day_of_week)}</Card.Header>\r\n            <ListGroup variant=\"info\">\r\n                <ListGroup.Item>\r\n                    {(timeToString(slot.time_of_day))}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Card>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {babysitter.slots.map(slot => { return (card(slot)) })}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Slots"]},"metadata":{},"sourceType":"module"}