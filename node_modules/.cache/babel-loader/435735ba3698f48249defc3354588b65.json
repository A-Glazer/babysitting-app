{"ast":null,"code":"export const getBabysitters = props => {\n  return {\n    type: 'FETCH_BABYSITTERS',\n    payload: props\n  };\n};\nexport const slotMerge = babyData => {\n  return babyData.map(babysitter => {\n    const allSlots = [{\n      id: 0,\n      day_of_week: 0,\n      time_of_day: []\n    }, {\n      id: 1,\n      day_of_week: 1,\n      time_of_day: []\n    }, {\n      id: 2,\n      day_of_week: 2,\n      time_of_day: []\n    }, {\n      id: 3,\n      day_of_week: 3,\n      time_of_day: []\n    }, {\n      id: 4,\n      day_of_week: 4,\n      time_of_day: []\n    }, {\n      id: 5,\n      day_of_week: 5,\n      time_of_day: []\n    }, {\n      id: 6,\n      day_of_week: 6,\n      time_of_day: []\n    }];\n\n    for (const slot of babysitter.slots) {\n      if (allSlots[slot.day_of_week] && allSlots[slot.day_of_week].time_of_day !== slot.time_of_day) {\n        allSlots[slot.day_of_week].time_of_day.push({\n          time: slot.time_of_day,\n          id: slot.id\n        });\n      }\n    }\n\n    let sortSlots = allSlots.map(s => ({ ...s,\n      time_of_day: s.time_of_day.sort((t1, t2) => t1.time - t2.time)\n    }));\n    return { ...babysitter,\n      slots: sortSlots\n    };\n  });\n};\nexport function loadBabysitters() {\n  return {\n    type: \"LOADING_BABYSITTERS\"\n  };\n}\nexport function stop() {}\nexport function fetchBabysitters() {\n  return async dispatch => {\n    dispatch(loadBabysitters());\n\n    try {\n      const res = await fetch('http://localhost:3000/api/v1/babysitters');\n\n      if (!res.ok) {\n        throw console.log(res);\n      }\n\n      const babyData = await res.json();\n      const slotArr = slotMerge(babyData);\n      let response = getBabysitters(slotArr);\n      dispatch(response);\n    } catch (err) {\n      console.log(err);\n      alert(\"Failed to load babysitters\");\n    }\n  };\n}","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/actions/fetchBabysitters.js"],"names":["getBabysitters","props","type","payload","slotMerge","babyData","map","babysitter","allSlots","id","day_of_week","time_of_day","slot","slots","push","time","sortSlots","s","sort","t1","t2","loadBabysitters","stop","fetchBabysitters","dispatch","res","fetch","ok","console","log","json","slotArr","response","err","alert"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAO;AAAEC,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA,OAAO,EAAEF;AAAtC,GAAP;AACH,CAFM;AAIP,OAAO,MAAMG,SAAS,GAAGC,QAAQ,IAAI;AACjC,SAAOA,QAAQ,CAACC,GAAT,CAAaC,UAAU,IAAI;AAC9B,UAAMC,QAAQ,GAAG,CACb;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KADa,EAMb;AACIF,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KANa,EAWb;AACIF,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAXa,EAgBb;AACIF,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAhBa,EAqBb;AACIF,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KArBa,EA0Bb;AACIF,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KA1Ba,EA+Bb;AACIF,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KA/Ba,CAAjB;;AAqCA,SAAK,MAAMC,IAAX,IAAmBL,UAAU,CAACM,KAA9B,EAAqC;AACjC,UAAIL,QAAQ,CAACI,IAAI,CAACF,WAAN,CAAR,IAA8BF,QAAQ,CAACI,IAAI,CAACF,WAAN,CAAR,CAA2BC,WAA3B,KAA2CC,IAAI,CAACD,WAAlF,EAA+F;AAC3FH,QAAAA,QAAQ,CAACI,IAAI,CAACF,WAAN,CAAR,CAA2BC,WAA3B,CAAuCG,IAAvC,CAA4C;AAAEC,UAAAA,IAAI,EAAEH,IAAI,CAACD,WAAb;AAA0BF,UAAAA,EAAE,EAAEG,IAAI,CAACH;AAAnC,SAA5C;AACH;AACJ;;AACD,QAAIO,SAAS,GAAGR,QAAQ,CAACF,GAAT,CAAaW,CAAC,KAAK,EAAE,GAAGA,CAAL;AAAQN,MAAAA,WAAW,EAAEM,CAAC,CAACN,WAAF,CAAcO,IAAd,CAAmB,CAACC,EAAD,EAAKC,EAAL,KAAYD,EAAE,CAACJ,IAAH,GAAUK,EAAE,CAACL,IAA5C;AAArB,KAAL,CAAd,CAAhB;AACA,WAAO,EAAE,GAAGR,UAAL;AAAiBM,MAAAA,KAAK,EAAEG;AAAxB,KAAP;AACH,GA7CM,CAAP;AA8CH,CA/CM;AAiDP,OAAO,SAASK,eAAT,GAA2B;AAC9B,SAAO;AAACnB,IAAAA,IAAI,EAAE;AAAP,GAAP;AACH;AAED,OAAO,SAASoB,IAAT,GAAgB,CAAE;AAEzB,OAAO,SAASC,gBAAT,GAA4B;AAC/B,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;;AACA,QAAI;AACA,YAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAAD,CAAvB;;AACA,UAAI,CAACD,GAAG,CAACE,EAAT,EAAa;AACT,cAAMC,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAAN;AACH;;AACD,YAAMpB,QAAQ,GAAG,MAAMoB,GAAG,CAACK,IAAJ,EAAvB;AACA,YAAMC,OAAO,GAAG3B,SAAS,CAACC,QAAD,CAAzB;AACA,UAAI2B,QAAQ,GAAGhC,cAAc,CAAC+B,OAAD,CAA7B;AACAP,MAAAA,QAAQ,CAACQ,QAAD,CAAR;AAEH,KAVD,CAUE,OAAOC,GAAP,EAAY;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH;AACJ,GAhBD;AAkBH","sourcesContent":["export const getBabysitters = (props) => {\r\n    return { type: 'FETCH_BABYSITTERS', payload: props }\r\n}\r\n\r\nexport const slotMerge = babyData => {\r\n    return babyData.map(babysitter => {\r\n        const allSlots = [\r\n            {\r\n                id: 0,\r\n                day_of_week: 0,\r\n                time_of_day: []\r\n            },\r\n            {\r\n                id: 1,\r\n                day_of_week: 1,\r\n                time_of_day: []\r\n            },\r\n            {\r\n                id: 2,\r\n                day_of_week: 2,\r\n                time_of_day: []\r\n            },\r\n            {\r\n                id: 3,\r\n                day_of_week: 3,\r\n                time_of_day: []\r\n            },\r\n            {\r\n                id: 4,\r\n                day_of_week: 4,\r\n                time_of_day: []\r\n            },\r\n            {\r\n                id: 5,\r\n                day_of_week: 5,\r\n                time_of_day: []\r\n            },\r\n            {\r\n                id: 6,\r\n                day_of_week: 6,\r\n                time_of_day: []\r\n            },\r\n        ]\r\n        for (const slot of babysitter.slots) {\r\n            if (allSlots[slot.day_of_week] && allSlots[slot.day_of_week].time_of_day !== slot.time_of_day) {\r\n                allSlots[slot.day_of_week].time_of_day.push({ time: slot.time_of_day, id: slot.id })\r\n            }\r\n        }\r\n        let sortSlots = allSlots.map(s => ({ ...s, time_of_day: s.time_of_day.sort((t1, t2) => t1.time - t2.time) }))\r\n        return { ...babysitter, slots: sortSlots }\r\n    })\r\n}\r\n\r\nexport function loadBabysitters() {\r\n    return {type: \"LOADING_BABYSITTERS\"}\r\n}\r\n\r\nexport function stop() {}\r\n\r\nexport function fetchBabysitters() {\r\n    return async (dispatch) => {\r\n        dispatch(loadBabysitters())\r\n        try {\r\n            const res = await fetch('http://localhost:3000/api/v1/babysitters')\r\n            if (!res.ok) {\r\n                throw console.log(res)\r\n            }\r\n            const babyData = await res.json()\r\n            const slotArr = slotMerge(babyData)\r\n            let response = getBabysitters(slotArr)\r\n            dispatch(response)\r\n            \r\n        } catch (err) {\r\n            console.log(err)\r\n            alert(\"Failed to load babysitters\")\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}