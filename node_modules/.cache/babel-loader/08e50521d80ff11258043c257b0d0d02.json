{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/BabysittersContainer.js\";\nimport React from 'react';\nimport BabysitterInput from '../components/BabysitterInput';\nimport Babysitters from '../components/Babysitters';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport BabysitterShow from '../components/BabysitterShow';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { stop } from '../actions/fetchBabysitters';\n\nclass BabysittersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoading = () => {\n      console.log(this.props);\n\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, !this.props.stop ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Loading...\")), React.createElement(\"button\", {\n          onClick: this.props.stop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"stop\")) : null);\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/babysitters/new\",\n          component: BabysitterInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/babysitters/:id\",\n          render: routerProps => React.createElement(BabysitterShow, Object.assign({}, routerProps, {\n            babysitters: this.props.babysitters,\n            deleteBabysitter: this.props.deleteBabysitter,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/babysitters\",\n          render: routerProps => React.createElement(Babysitters, Object.assign({}, routerProps, {\n            babysitters: this.props.babysitters,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        })));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.handleLoading());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state.loading,\n    stop: state.stop\n  };\n}; // const mapDispatchToProps = dispatch => {\n//     return {\n//         deleteBabysitter: id => dispatch({ type: 'DELETE_BABYSITTER', id })\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  stop\n})(BabysittersContainer);","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/BabysittersContainer.js"],"names":["React","BabysitterInput","Babysitters","connect","Route","Switch","BabysitterShow","Spinner","stop","BabysittersContainer","Component","constructor","props","handleLoading","console","log","loading","routerProps","babysitters","deleteBabysitter","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,IAAR,QAAmB,6BAAnB;;AAEA,MAAMC,oBAAN,SAAmCT,KAAK,CAACU,SAAzC,CAAmD;AAE/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,aAJmB,GAIH,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;;AACA,UAAI,KAAKA,KAAL,CAAWI,OAAf,EAAwB;AACpB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,CAAC,KAAKJ,KAAL,CAAWJ,IAAZ,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACF;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADE,CAAL,EAGD;AAAQ,UAAA,OAAO,EAAE,KAAKI,KAAL,CAAWJ,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHC,CADA,GAKC,IANN,CADJ;AAUH,OAXD,MAWO;AACH,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,kBAAZ;AAA+B,UAAA,SAAS,EAAEP,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,kBAAZ;AAA+B,UAAA,MAAM,EAAGgB,WAAD,IACnC,oBAAC,cAAD,oBACQA,WADR;AAEI,YAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAF5B;AAGI,YAAA,gBAAgB,EAAE,KAAKN,KAAL,CAAWO,gBAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EASI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,MAAM,EAAGF,WAAD,IAC/B,oBAAC,WAAD,oBAAiBA,WAAjB;AAA8B,YAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CADJ,CADJ;AAgBH;AACJ,KAnCkB;AAElB;;AAmCDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,aAAL,EADL,CADJ;AAMH;;AA9C8C;;AAiDnD,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,WAAW,EAAEI,KAAK,CAACJ,WADhB;AAEHF,IAAAA,OAAO,EAAEM,KAAK,CAACN,OAFZ;AAGHR,IAAAA,IAAI,EAAEc,KAAK,CAACd;AAHT,GAAP;AAKH,CAND,C,CAQA;AACA;AACA;AACA;AACA;;;AAGA,eAAeL,OAAO,CAACkB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAmCC,oBAAnC,CAAf","sourcesContent":["import React from 'react'\r\nimport BabysitterInput from '../components/BabysitterInput'\r\nimport Babysitters from '../components/Babysitters'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport BabysitterShow from '../components/BabysitterShow'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport {stop} from '../actions/fetchBabysitters'\r\n\r\nclass BabysittersContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    handleLoading = () => {\r\n        console.log(this.props)\r\n        if (this.props.loading) {\r\n            return (\r\n                <div>\r\n                    {!this.props.stop ?\r\n                    (<div><Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                    <button onClick={this.props.stop}>stop</button></div>)\r\n                    : null\r\n        }\r\n                </div>)\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Switch>\r\n                        <Route path='/babysitters/new' component={BabysitterInput} />\r\n                        <Route path='/babysitters/:id' render={(routerProps) =>\r\n                            <BabysitterShow\r\n                                {...routerProps}\r\n                                babysitters={this.props.babysitters}\r\n                                deleteBabysitter={this.props.deleteBabysitter}\r\n                            />}\r\n                        />\r\n                        <Route path='/babysitters' render={(routerProps) =>\r\n                            <Babysitters {...routerProps} babysitters={this.props.babysitters} />} />\r\n                    </Switch>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.handleLoading()}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        babysitters: state.babysitters,\r\n        loading: state.loading,\r\n        stop: state.stop\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         deleteBabysitter: id => dispatch({ type: 'DELETE_BABYSITTER', id })\r\n//     }\r\n// }\r\n\r\n\r\nexport default connect(mapStateToProps, { stop })(BabysittersContainer)"]},"metadata":{},"sourceType":"module"}