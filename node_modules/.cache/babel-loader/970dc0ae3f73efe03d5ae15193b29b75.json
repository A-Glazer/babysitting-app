{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/App.js\";\nimport React from 'react';\nimport \"./styles.css\";\nimport { connect } from 'react-redux';\nimport BabysittersContainer from './containers/BabysittersContainer';\nimport Home from './components/Home';\nimport { Route, Switch } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { fetchBabysitters } from './actions/fetchBabysitters';\n\nclass App extends React.Component {\n  componentWillMount() {\n    this.props.fetchBabysitters();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/babysitters\",\n      component: BabysittersContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/babysitters\",\n      component: BabysittersContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchBabysitters\n})(App); // export default connect()(App);\n// we don't need to get anything from the store, so we don't need \n// mapStateToProps. However, we want to update the store so we need\n// mapDispatchToProps","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/App.js"],"names":["React","connect","BabysittersContainer","Home","Route","Switch","NavBar","fetchBabysitters","App","Component","componentWillMount","props","render","mapStateToProps","state","babysitters","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;AAGA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAEhCC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWJ,gBAAX;AACH;;AAECK,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEV,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAED,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAYD;;AApB+B;;AAuBlC,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAFZ,GAAP;AAID,CALD;;AAQA,eAAef,OAAO,CAACY,eAAD,EAAkB;AAAEN,EAAAA;AAAF,CAAlB,CAAP,CAA+CC,GAA/C,CAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport \"./styles.css\"\nimport {connect} from 'react-redux'\nimport BabysittersContainer from './containers/BabysittersContainer'\nimport Home from './components/Home'\nimport { Route, Switch } from 'react-router-dom'\nimport { NavBar } from './components/NavBar'\nimport { fetchBabysitters } from './actions/fetchBabysitters'\n\n\nclass App extends React.Component {\n\n  componentWillMount() {\n    this.props.fetchBabysitters()\n}\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n\n          <Route path='/babysitters' component={BabysittersContainer} />\n          <Route path='/' component={Home} />\n          <Route path='/babysitters' component={BabysittersContainer} />\n\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      babysitters: state.babysitters,\n      loading: state.loading\n  }\n}\n\n\nexport default connect(mapStateToProps, { fetchBabysitters })(App)\n\n// export default connect()(App);\n// we don't need to get anything from the store, so we don't need \n// mapStateToProps. However, we want to update the store so we need\n// mapDispatchToProps\n"]},"metadata":{},"sourceType":"module"}