{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/components/Slots.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row'; // import Button from 'react-bootstrap/Button'\n// import { Link } from 'react-router-dom'\n// import { render } from '@testing-library/react'\n// import Col from 'react-bootstrap/Col'\n\nconst Slots = ({\n  babysitter\n}) => {\n  console.log(\"this is babysitter on own\", babysitter);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, console.log(\"babysitter test\", babysitter), babysitter.slots.map(slot => {\n    return card(slot);\n  }));\n\n  function dayToString(day_of_week) {\n    if (day_of_week === 0) {\n      return \"Sunday\";\n    } else if (day_of_week === 1) {\n      return \"Monday\";\n    } else if (day_of_week === 2) {\n      return \"Tuesday\";\n    } else if (day_of_week === 3) {\n      return \"Wednesday\";\n    } else if (day_of_week === 4) {\n      return \"Thursday\";\n    } else if (day_of_week == 5) {\n      return \"Friday\";\n    } else if (day_of_week === 6) {\n      return \"Saturday\";\n    }\n  }\n\n  function timeToString(time_of_day) {\n    if (time_of_day === 0) {\n      return \"Morning\";\n    } else if (time_of_day === 1) {\n      return \"Afternoon\";\n    } else if (time_of_day === 2) {\n      return \"Evening\";\n    }\n  }\n\n  function card(slot) {\n    // if (slot.time_of_day || slot.time_of_day.length > 0) {\n    // if (slot.time_of_day.length > 0) {\n    return React.createElement(Row, {\n      className: \"babyCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(CardDeck, {\n      className: \"card-padding date-cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Card, {\n      bg: \"light\",\n      style: {\n        width: '14rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, dayToString(slot.day_of_week)), React.createElement(ListGroup, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, theSlot(slot)))))); // }\n  }\n\n  function theSlot(babysitter) {\n    // {babysitter.slots.map(slot => { return card(slot) })}\n    if (slot.time_of_day) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, slot.time_of_day.map(time => {\n        if (time === 0) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"Morning\");\n        } else if (time === 1) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"Afternoon\");\n        } else if (time === 2) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"Evening\");\n        }\n      }));\n    }\n  }\n};\n\nexport default Slots;","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/components/Slots.js"],"names":["React","Card","CardDeck","ListGroup","Row","Slots","babysitter","console","log","slots","map","slot","card","dayToString","day_of_week","timeToString","time_of_day","width","theSlot","time"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Row from 'react-bootstrap/Row'\r\n// import Button from 'react-bootstrap/Button'\r\n// import { Link } from 'react-router-dom'\r\n// import { render } from '@testing-library/react'\r\n// import Col from 'react-bootstrap/Col'\r\n\r\n\r\nconst Slots = ({ babysitter }) => {\r\n\r\n    console.log(\"this is babysitter on own\", babysitter)\r\n\r\n    return (\r\n        <div>\r\n            {console.log(\"babysitter test\", babysitter)}\r\n            {babysitter.slots.map(slot => { return card(slot) })}\r\n            {/* {babysitter && babysitter.slots.map(slot => { return card(slot) })} */}\r\n        </div>\r\n    )\r\n\r\n    function dayToString(day_of_week) {\r\n        if (day_of_week === 0) {\r\n            return \"Sunday\"\r\n        } else if (day_of_week === 1) {\r\n            return \"Monday\"\r\n        } else if (day_of_week === 2) {\r\n            return \"Tuesday\"\r\n        } else if (day_of_week === 3) {\r\n            return \"Wednesday\"\r\n        } else if (day_of_week === 4) {\r\n            return \"Thursday\"\r\n        } else if (day_of_week == 5) {\r\n            return \"Friday\"\r\n        } else if (day_of_week === 6) {\r\n            return \"Saturday\"\r\n        }\r\n    }\r\n\r\n    function timeToString(time_of_day) {\r\n        if (time_of_day === 0) {\r\n            return \"Morning\"\r\n        } else if (time_of_day === 1) {\r\n            return \"Afternoon\"\r\n        } else if (time_of_day === 2) {\r\n            return \"Evening\"\r\n        }\r\n    }\r\n\r\n    function card(slot) {\r\n        // if (slot.time_of_day || slot.time_of_day.length > 0) {\r\n        // if (slot.time_of_day.length > 0) {\r\n        return (\r\n            <Row className=\"babyCard\">\r\n                <CardDeck className=\"card-padding date-cards\">\r\n                    <Card bg=\"light\" style={{ width: '14rem' }}>\r\n                        <Card.Header>{dayToString(slot.day_of_week)}</Card.Header>\r\n                        <ListGroup variant=\"info\">\r\n                            <ListGroup.Item>\r\n                                {theSlot(slot)}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </CardDeck>\r\n            </Row >\r\n        )\r\n        // }\r\n    }\r\n\r\n    function theSlot(babysitter) {\r\n        // {babysitter.slots.map(slot => { return card(slot) })}\r\n        if (slot.time_of_day) {\r\n            return <div>{slot.time_of_day.map(time => {\r\n                if (time === 0) {\r\n                    return <li>Morning</li>\r\n                } else if (time === 1) {\r\n                    return <li>Afternoon</li>\r\n                } else if (time === 2) {\r\n                    return <li>Evening</li>\r\n                }\r\n            }\r\n            )}</div>\r\n        }\r\n    }\r\n\r\n  \r\n \r\n\r\n}\r\nexport default Slots\r\n"]},"metadata":{},"sourceType":"module"}