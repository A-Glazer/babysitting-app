{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/App.js\";\nimport React from 'react';\nimport \"./styles.css\";\nimport { connect } from 'react-redux';\nimport BabysittersContainer from './containers/BabysittersContainer';\nimport Home from './components/Home';\nimport { Route, Switch } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { loadBabysitters } from './actions/fetchBabysitters';\nimport BabysitterShow from './components/BabysitterShow';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    this.props.loadBabysitters(this.props.dispatch);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/babysitters\",\n      component: BabysittersContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/babysitters/:id\",\n      component: BabysitterShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state.loading\n  };\n};\n\nexport default connect(mapStateToProps)(App); // export default connect()(App);\n// we don't need to get anything from the store, so we don't need \n// mapStateToProps. However, we want to update the store so we need\n// mapDispatchToProps","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/App.js"],"names":["React","connect","BabysittersContainer","Home","Route","Switch","NavBar","loadBabysitters","BabysitterShow","App","Component","componentDidMount","props","dispatch","render","mapStateToProps","state","babysitters","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAEhC,QAAMC,iBAAN,GAA0B;AAExB,SAAKC,KAAL,CAAWL,eAAX,CAA2B,KAAKK,KAAL,CAAWC,QAAtC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEZ,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,kBAAZ;AAA+B,MAAA,SAAS,EAAEK,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AAlB+B;;AAqBlC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADd;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAFV,GAAP;AAID,CALD;;AAQA,eAAejB,OAAO,CAACc,eAAD,CAAP,CAAyBN,GAAzB,CAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport \"./styles.css\"\nimport { connect } from 'react-redux'\nimport BabysittersContainer from './containers/BabysittersContainer'\nimport Home from './components/Home'\nimport { Route, Switch } from 'react-router-dom'\nimport { NavBar } from './components/NavBar'\nimport { loadBabysitters } from './actions/fetchBabysitters'\nimport BabysitterShow from './components/BabysitterShow';\n\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    \n    this.props.loadBabysitters(this.props.dispatch)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route path='/babysitters' component={BabysittersContainer} />\n          <Route path='/' component={Home} />\n          <Route path='/babysitters/:id' component={BabysitterShow} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state.loading\n  }\n}\n\n\nexport default connect(mapStateToProps)(App)\n\n// export default connect()(App);\n// we don't need to get anything from the store, so we don't need \n// mapStateToProps. However, we want to update the store so we need\n// mapDispatchToProps\n"]},"metadata":{},"sourceType":"module"}