{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/components/Slots.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport { Link } from 'react-router-dom';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst Slots = props => {\n  console.log(\"this is props\", props);\n\n  function dayToString(day_of_week) {\n    if (day_of_week === 0) {\n      return \"Sunday\";\n    } else if (day_of_week === 1) {\n      return \"Monday\";\n    } else if (day_of_week === 2) {\n      return \"Tuesday\";\n    } else if (day_of_week === 3) {\n      return \"Wednesday\";\n    } else if (day_of_week === 4) {\n      return \"Thursday\";\n    } else if (day_of_week == 5) {\n      return \"Friday\";\n    } else if (day_of_week === 6) {\n      return \"Saturday\";\n    }\n  }\n\n  function timeToString(time_of_day) {\n    if (time_of_day === 0) {\n      return \"Morning\";\n    } else if (time_of_day === 1) {\n      return \"Afternoon\";\n    } else if (time_of_day === 2) {\n      return \"Evening\";\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.slots && props.slots.map(slot => {\n    if (slot.day_of_week === 1) {\n      return;\n      React.createElement(Card, {\n        style: {\n          width: '18rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Sunday\"), React.createElement(ListGroup, {\n        variant: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"(timeToString(slot.time_of_day))\"), React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Afternoon\"), React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Evening\"))); // {timeToString(slot.time_of_day)}\n    }\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: '18rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Sunday\"), React.createElement(ListGroup, {\n    variant: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Afternoon\"), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Evening\"))))));\n};\n\nexport default Slots;","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/components/Slots.js"],"names":["React","Card","Button","CardDeck","Link","ListGroup","Slots","props","console","log","dayToString","day_of_week","timeToString","time_of_day","slots","map","slot","width"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport {Link} from 'react-router-dom'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nconst Slots = (props) => {\r\n    console.log(\"this is props\", props)\r\n\r\n    function dayToString(day_of_week){\r\n        if (day_of_week === 0){\r\n            return \"Sunday\"\r\n        }else if (day_of_week === 1){\r\n            return \"Monday\"\r\n        }else if (day_of_week === 2){\r\n            return \"Tuesday\"\r\n        }else if (day_of_week === 3){\r\n            return \"Wednesday\"\r\n        }else if (day_of_week === 4){\r\n            return \"Thursday\"\r\n        }else if (day_of_week == 5){\r\n            return \"Friday\"\r\n        }else if (day_of_week === 6){\r\n            return \"Saturday\"\r\n        }\r\n    }\r\n\r\n    function timeToString(time_of_day){\r\n        if (time_of_day === 0){\r\n            return \"Morning\"\r\n        }else if (time_of_day === 1){\r\n            return \"Afternoon\"\r\n        }else if (time_of_day === 2){\r\n            return \"Evening\"\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.slots && props.slots.map(slot =>\r\n                {if (slot.day_of_week === 1) {\r\n                return \r\n                <Card style={{ width: '18rem' }}>\r\n                <Card.Header>Sunday</Card.Header>\r\n                <ListGroup variant=\"info\">\r\n                    <ListGroup.Item>\r\n                    (timeToString(slot.time_of_day))\r\n                        </ListGroup.Item>\r\n                    <ListGroup.Item>Afternoon</ListGroup.Item>\r\n                    <ListGroup.Item>Evening</ListGroup.Item>\r\n                </ListGroup>\r\n                </Card>\r\n                \r\n                // {timeToString(slot.time_of_day)}\r\n             \r\n             }},\r\n            <div>\r\n\r\n                <Card style={{ width: '18rem' }}>\r\n                <Card.Header>Sunday</Card.Header>\r\n                <ListGroup variant=\"info\">\r\n                    <ListGroup.Item>\r\n                        \r\n                        </ListGroup.Item>\r\n                    <ListGroup.Item>Afternoon</ListGroup.Item>\r\n                    <ListGroup.Item>Evening</ListGroup.Item>\r\n                </ListGroup>\r\n                </Card>\r\n\r\n                {/* {dayToString(slot.day_of_week)} - {timeToString(slot.time_of_day)} */}\r\n            </div>    \r\n            \r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Slots"]},"metadata":{},"sourceType":"module"}