{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/CommentsContainer.js\";\nimport React from 'react';\nimport CommentInput from '../components/CommentInput';\nimport Comments from '../components/Comments';\n\nclass CommentsContainer extends React.Component {\n  render() {\n    if (this.props.loading) {\n      console.log(\"loading is true\"); // debugger\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Loading...\")));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(CommentInput, {\n        babysitter: this.props.babysitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        comments: this.props.babysitter && this.props.babysitter.comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state.loading\n  };\n};\n\nexport default CommentsContainer;","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/CommentsContainer.js"],"names":["React","CommentInput","Comments","CommentsContainer","Component","render","props","loading","console","log","babysitter","comments","mapStateToProps","state","babysitters"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAE5CC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADoB,CAEpB;;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CADJ;AAMH,KATD,MASO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,UAAX,IAAyB,KAAKJ,KAAL,CAAWI,UAAX,CAAsBC,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;AAMJ;;AAzB2C;;AA4BhD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHP,IAAAA,OAAO,EAAEM,KAAK,CAACN;AAFZ,GAAP;AAKH,CAND;;AAOI,eAAeJ,iBAAf","sourcesContent":["import React from 'react'\r\nimport CommentInput from '../components/CommentInput'\r\nimport Comments from '../components/Comments'\r\n\r\nclass CommentsContainer extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            console.log(\"loading is true\")\r\n            // debugger\r\n            return (\r\n                <div>\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>)\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <CommentInput babysitter={this.props.babysitter} />\r\n                    <Comments comments={this.props.babysitter && this.props.babysitter.comments} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        babysitters: state.babysitters,\r\n        loading: state.loading\r\n    }\r\n\r\n}\r\n    export default CommentsContainer "]},"metadata":{},"sourceType":"module"}