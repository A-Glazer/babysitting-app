{"ast":null,"code":"import { slotMerge } from './fetchBabysitters';\nexport const addSlot = (slot, babysitter) => {\n  return dispatch => {\n    let babysitterId = babysitter.id; // console.log(\"addSlot\", slot)\n\n    fetch(`http://localhost:3000/api/v1/babysitters/${babysitterId}/slots`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(slot)\n    }).then(response => response.json()).then(babysitter => {\n      const newBabysitter = slotMerge([babysitter])[0];\n      dispatch({\n        type: 'ADD_SLOT',\n        payload: newBabysitter\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/actions/addSlot.js"],"names":["slotMerge","addSlot","slot","babysitter","dispatch","babysitterId","id","fetch","method","headers","body","JSON","stringify","then","response","json","newBabysitter","type","payload"],"mappings":"AAAA,SAASA,SAAT,QAAyB,oBAAzB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AAEzC,SAAQC,QAAD,IAAc;AACjB,QAAIC,YAAY,GAAGF,UAAU,CAACG,EAA9B,CADiB,CAEjB;;AACAC,IAAAA,KAAK,CAAE,4CAA2CF,YAAa,QAA1D,EAAmE;AACpEG,MAAAA,MAAM,EAAE,MAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAF2D;AAMpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AAN8D,KAAnE,CAAL,CAQKW,IARL,CAQUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARtB,EASKF,IATL,CASUV,UAAU,IAAI;AAEhB,YAAMa,aAAa,GAAGhB,SAAS,CAAC,CAACG,UAAD,CAAD,CAAT,CAAwB,CAAxB,CAAtB;AACAC,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEF;AAA7B,OAAD,CAAR;AACX,KAbG;AAcP,GAjBG;AAoBH,CAtBM","sourcesContent":["import { slotMerge} from './fetchBabysitters'\r\n \r\nexport const addSlot = (slot, babysitter) => {\r\n\r\n    return (dispatch) => {\r\n        let babysitterId = babysitter.id\r\n        // console.log(\"addSlot\", slot)\r\n        fetch(`http://localhost:3000/api/v1/babysitters/${babysitterId}/slots`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(slot)\r\n        })\r\n            .then(response => response.json())\r\n            .then(babysitter => {\r\n\r\n                const newBabysitter = slotMerge([babysitter])[0]\r\n                dispatch({ type: 'ADD_SLOT', payload: newBabysitter })\r\n    })\r\n}\r\n\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}