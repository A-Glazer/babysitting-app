{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/SlotsContainer.js\";\nimport React from 'react';\nimport SlotInput from '../components/SlotInput';\nimport Slots from '../components/Slots';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { fetchBabysitters } from '../actions/fetchBabysitters';\nimport { connect } from 'react-redux';\nimport { render } from 'react-dom';\n\nclass SlotsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  } // handleLoading = () => {\n  //     if (this.props.loading) {\n  //         return (\n  //             <div>\n  //                 <Spinner animation=\"border\" role=\"status\">\n  //                     <span className=\"sr-only\">Loading...</span>\n  //                 </Spinner>\n  //             </div>)\n  //     }else {\n  //     \n  //         return (\n  //             <div>\n  //                 <SlotInput babysitter={this.props.babysitter} />\n  //                 <Slots babysitter={this.props.babysitter} />\n  //             </div>\n  //         )\n  //     }\n  // }\n\n\n  render() {\n    if (this.props.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Loading...\")));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(SlotInput, {\n        babysitter: this.props.babysitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Slots, {\n        babysitter: this.props.babysitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    } // if (this.props.loading) {\n    //     return this.handleLoading()\n    // } else {\n    //     console.log(\"this is slots\", this.props.babysitter)\n    //     return (\n    //         <div>\n    //             <SlotInput babysitter={this.props.babysitter} />\n    //             <Slots babysitter={this.props.babysitter} />\n    //         </div>\n    //     )\n    // }\n\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    babysitters: state.babysitters,\n    loading: state.loading\n  };\n};\n\nexport default connect(mapStateToProps)(SlotsContainer);","map":{"version":3,"sources":["/mnt/c/Users/aviga/Desktop/Flatiron/Projects/react_babysitting/babysitting-app/src/containers/SlotsContainer.js"],"names":["React","SlotInput","Slots","Spinner","fetchBabysitters","connect","render","SlotsContainer","Component","constructor","props","loading","babysitter","mapStateToProps","state","babysitters"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH,GAJwC,CAMzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAJ,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKI,KAAL,CAAWC,OAAf,EAAwB;AACpB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CADJ;AAMH,KAPD,MAOM;AACF,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH,KAfI,CAgBL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;AApDwC;;AAuD7C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHJ,IAAAA,OAAO,EAAEG,KAAK,CAACH;AAFZ,GAAP;AAKH,CAND;;AAQA,eAAeN,OAAO,CAACQ,eAAD,CAAP,CAAyBN,cAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport SlotInput from '../components/SlotInput'\r\nimport Slots from '../components/Slots'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { fetchBabysitters } from '../actions/fetchBabysitters'\r\nimport { connect } from 'react-redux'\r\nimport { render } from 'react-dom'\r\n\r\nclass SlotsContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    // handleLoading = () => {\r\n    //     if (this.props.loading) {\r\n    //         return (\r\n    //             <div>\r\n    //                 <Spinner animation=\"border\" role=\"status\">\r\n    //                     <span className=\"sr-only\">Loading...</span>\r\n    //                 </Spinner>\r\n    //             </div>)\r\n    //     }else {\r\n    //     \r\n    //         return (\r\n    //             <div>\r\n    //                 <SlotInput babysitter={this.props.babysitter} />\r\n    //                 <Slots babysitter={this.props.babysitter} />\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return (\r\n                <div>\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>)\r\n        }else {\r\n            return (\r\n                <div>\r\n                    <SlotInput babysitter={this.props.babysitter} />\r\n                    <Slots babysitter={this.props.babysitter} />\r\n                </div>\r\n            )\r\n        }\r\n        // if (this.props.loading) {\r\n        //     return this.handleLoading()\r\n        // } else {\r\n        //     console.log(\"this is slots\", this.props.babysitter)\r\n        //     return (\r\n        //         <div>\r\n        //             <SlotInput babysitter={this.props.babysitter} />\r\n        //             <Slots babysitter={this.props.babysitter} />\r\n        //         </div>\r\n        //     )\r\n        // }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        babysitters: state.babysitters,\r\n        loading: state.loading\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(SlotsContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}